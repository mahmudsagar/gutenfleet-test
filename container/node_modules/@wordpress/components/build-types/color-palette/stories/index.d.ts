/// <reference types="react" />
import type { ComponentMeta, ComponentStory } from '@storybook/react';
/**
 * Internal dependencies
 */
import ColorPalette from '..';
declare const meta: ComponentMeta<typeof ColorPalette>;
export default meta;
export declare const Default: ComponentStory<import("react").ForwardRefExoticComponent<import("../types").ColorPaletteProps & Omit<Pick<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof import("react").HTMLAttributes<HTMLDivElement>>, "children" | "as" | keyof import("../types").ColorPaletteProps> & {
    as?: keyof JSX.IntrinsicElements | undefined;
} & import("react").RefAttributes<any>>>;
/**
 * When setting the `__experimentalHasMultipleOrigins` prop to `true`,
 * the `colors` prop is expected to be an array of color palettes, rather
 * than an array of color objects.
 */
export declare const MultipleOrigins: ComponentStory<import("react").ForwardRefExoticComponent<import("../types").ColorPaletteProps & Omit<Pick<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof import("react").HTMLAttributes<HTMLDivElement>>, "children" | "as" | keyof import("../types").ColorPaletteProps> & {
    as?: keyof JSX.IntrinsicElements | undefined;
} & import("react").RefAttributes<any>>>;
export declare const CSSVariables: ComponentStory<typeof ColorPalette>;
//# sourceMappingURL=index.d.ts.map