/**
 * Internal dependencies
 */
import type { FontSize, FontSizeOption, FontSizeSelectOption, FontSizeToggleGroupOption, FontSizePickerProps } from './types';
export declare const CUSTOM_FONT_SIZE = "custom";
/**
 * Some themes use css vars for their font sizes, so until we
 * have the way of calculating them don't display them.
 *
 * @param  value The value that is checked.
 * @return Whether the value is a simple css value.
 */
export declare function isSimpleCssValue(value: NonNullable<FontSizePickerProps['value']>): boolean;
/**
 * Return font size options in the proper format depending
 * on the currently used control (select, toggle group).
 *
 * @param  useSelectControl       Whether to use a select control.
 * @param  optionsArray           Array of available font sizes objects.
 * @param  disableCustomFontSizes Flag that indicates if custom font sizes are disabled.
 * @return Array of font sizes in proper format for the used control.
 */
export declare function getFontSizeOptions(useSelectControl: boolean, optionsArray: FontSize[], disableCustomFontSizes: boolean): FontSizeSelectOption[] | FontSizeToggleGroupOption[] | null;
/**
 * Build options for the toggle group options.
 *
 * @param  optionsArray An array of font size options.
 * @param  labelAliases An array of alternative labels.
 * @return Remapped optionsArray.
 */
export declare function getToggleGroupOptions(optionsArray: FontSize[], labelAliases?: string[]): FontSizeToggleGroupOption[];
export declare function getSelectedOption(fontSizes: FontSize[], value: FontSizePickerProps['value']): FontSizeOption;
//# sourceMappingURL=utils.d.ts.map